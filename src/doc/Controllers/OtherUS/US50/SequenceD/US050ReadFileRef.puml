@startuml

skinparam titleBorderRoundCorner 10
skinparam titleBorderThickness 3
skinparam titleBorderColor indianred
skinparam titleBackgroundColor ivory
skinparam FontName quicksand

skinparam actor {
 	BorderColor indianred
 	}

 skinparam sequence {
 	LifeLineBackgroundColor indianred
 	ParticipantBackgroundColor ivory
 }

 skinparam roundcorner 10

 skinparam component {
   arrowThickness 1
   ArrowFontName Verdana
   ArrowColor indianred
   ArrowFontColor darkslategrey
 }



-> FileInputUtils: readDeviceMeteringPeriod()
activate FileInputUtils
FileInputUtils -->> Properties: props = new Properties()
activate Properties

alt try

FileInputUtils -->> FileInputStream: input = new FileInputStream(file location)
activate FileInputStream
FileInputUtils -> Properties: load(input)
FileInputUtils -> Properties: deviceMetering = props.getProperty("DeviceMeteringPeriod")
FileInputUtils --x FileInputStream: input.close()
deactivate FileInputStream
deactivate Properties

else catch
FileInputUtils -> FileInputUtils: IOException

end

alt try
FileInputUtils -> Integer: parseInt(deviceMeteringPeriod)
activate Integer
Integer --> FileInputUtils: return deviceMeteringPeriod
deactivate Integer
<-- FileInputUtils: return deviceMeteringPeriod


else catch
FileInputUtils -> FileInputUtils: NumberFormatException

end


@enduml