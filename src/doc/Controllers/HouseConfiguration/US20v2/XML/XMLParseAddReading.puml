@startuml

skinparam titleBorderRoundCorner 10
skinparam titleBorderThickness 3
skinparam titleBorderColor indianred
skinparam titleBackgroundColor ivory
skinparam FontName quicksand

skinparam actor {
 	BorderColor indianred
 	}

 skinparam sequence {
 	LifeLineBackgroundColor indianred
 	ParticipantBackgroundColor ivory
 }

 skinparam roundcorner 10

 skinparam component {
   arrowThickness 1
   ArrowFontName Verdana
   ArrowColor indianred
   ArrowFontColor darkslategrey
 }


title XMLParseAddReading
-> ReaderController: parseAndLogXMLReading(sensorList, element, logger)
activate ReaderController

alt try

ReaderController -> ReaderController: sensorID = element.getElementsByTagName("id");
ReaderController -> ReaderController: Date readDate = Double.parseDate(element.getElementsByTagName("timestamp/date"));
ReaderController -> ReaderController: Double readValue = Double.parseDouble(element.getElementsByTagName("value"));
ReaderController -> ReaderController: addReadingToMatchingSensor(logger, sensorList, sensorID, readDate, readValue);
else catch
ReaderController -> ReaderController: NumberFormatException
ReaderController -> ReaderController: ParseException
end
<- ReaderController: int added Readings
deactivate ReaderController

@enduml