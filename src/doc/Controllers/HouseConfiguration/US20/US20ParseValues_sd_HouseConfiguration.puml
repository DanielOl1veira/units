@startuml

title Parse Values

skinparam titleBorderRoundCorner 10
skinparam titleBorderThickness 3
skinparam titleBorderColor indianred
skinparam titleBackgroundColor ivory
skinparam FontName quicksand

skinparam actor {
 	BorderColor indianred
 	}

 skinparam sequence {
 	LifeLineBackgroundColor indianred
 	ParticipantBackgroundColor ivory
 }

 skinparam roundcorner 10

 skinparam component {
   arrowThickness 1
   ArrowFontName Verdana
   ArrowColor indianred
   ArrowFontColor darkslategrey
 }



-> CSVReaderController: parseAndLog(String[] readings, Logger logger, SensorList typeSensorList)
activate CSVReaderController

CSVReaderController -->> SimpleDateFormat: sdf 1 = new SimpleDateFormat("dd/MM/yyyy")
CSVReaderController -->> SimpleDateFormat: sdf 2 = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'+00:00'")
CSVReaderController -->> SimpleDateFormat: sdf N = new SimpleDateFormat("...")

alt try

CSVReaderController -->> Double: Double readValue = Double.parseDouble(readings[2]);
CSVReaderController -->> String:String readID = readings[0];
CSVReaderController -> CSVReaderController: setCSVReadings(sensor, readDate, readValue)

else catch
CSVReaderController -> CSVReaderController: NumberFormatException
CSVReaderController -> CSVReaderController: ParseException

end



@enduml