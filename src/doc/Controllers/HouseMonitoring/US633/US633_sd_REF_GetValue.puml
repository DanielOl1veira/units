@startuml
skinparam titleBorderRoundCorner 10
skinparam titleBorderThickness 3
skinparam titleBorderColor indianred
skinparam titleBackgroundColor ivory
skinparam FontName quicksand

skinparam actor {
  BorderColor indianred
  }

skinparam sequence {
  LifeLineBackgroundColor indianred
  ParticipantBackgroundColor ivory
}

skinparam roundcorner 10

skinparam component {
  arrowThickness 1
  ArrowFontName Verdana
  ArrowColor indianred
  ArrowFontColor darkslategrey
}

title US633 \n REF Get Highest Amplitude Value
autonumber

activate ":HouseMonitoringUI"
":HouseMonitoringUI" -> ":HouseMonitoringController": getHighestTempAmplitudeValue\n                       (House, Date)
deactivate ":HouseMonitoringUI"
activate ":HouseMonitoringController"

":HouseMonitoringController" -> ":Sensor": getHighestTempAmplitudeValue\n                                  (Date, Date)
activate ":Sensor"
":Sensor" -> ":ReadingList": getHighestAmplitudeInDate\n                                (Date, Date)

activate ":ReadingList"
":ReadingList"->":ReadingList":getAmplitudeValueFromDate(date)
":ReadingList"->":ReadingList": getValuesOfSpecificDayReadings(Date)
":ReadingList"->":ReadingList": compareDayMonthAndYearBetweenDates(Date, Date)

":ReadingList" --> ":Sensor": return double
deactivate ":ReadingList"
":Sensor" --> ":HouseMonitoringController": return double
deactivate ":Sensor"

":HouseMonitoringController" --> ":HouseMonitoringUI": return double
deactivate ":HouseMonitoringController"
activate ":HouseMonitoringUI"

deactivate ":HouseMonitoringUI"

deactivate ":MainUI"


@enduml