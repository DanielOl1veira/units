@startuml
skinparam titleBorderRoundCorner 10
skinparam titleBorderThickness 3
skinparam titleBorderColor indianred
skinparam titleBackgroundColor ivory
skinparam FontName quicksand
skinparam actor {
  BorderColor indianred
  }
skinparam sequence {
  LifeLineBackgroundColor indianred
  ParticipantBackgroundColor ivory
}
skinparam roundcorner 10
skinparam component {
  arrowThickness 1
  ArrowFontName Verdana
  ArrowColor indianred
  ArrowFontColor darkslategrey
}
title US630 \n US630 : As a Regular User, I want to get the last coldest day (lower maximum temperature) in the house area in a given period. \n - Success Case -
autonumber
actor User
User -> ":HouseMonitoringUI": runUS630(house)
activate ":HouseMonitoringUI"
ref over ":HouseMonitoringUI"
Get Input Start
and End Date
end ref
":HouseMonitoringUI" -> ":HouseMonitoringUI": updateUS630(house, Date, Date)
":HouseMonitoringUI" -> ":HouseMonitoringController": getLastColdestDayInGivenInterval\n(house, Date, Date)
ref over ":HouseMonitoringController"
Get Closest Sensor
to House Area
end ref
activate ":HouseMonitoringController"
":HouseMonitoringController" -> ":Sensor": getLastColdestDayInGivenInterval\n(Date, Date)
activate ":Sensor"
":Sensor" -> ":ReadingList": getLastColdestDayInGivenInterval\n(Date, Date)
activate ":ReadingList"
ref over ":ReadingList"
Get Last Coldest
Day in Given Interval
end ref
":ReadingList" --> ":Sensor": return Date
deactivate ":ReadingList"
":Sensor" --> ":HouseMonitoringController": return Date
deactivate ":Sensor"
":HouseMonitoringController" --> ":HouseMonitoringUI": return Date
":HouseMonitoringUI" -> ":HouseMonitoringUI": build result string
deactivate ":HouseMonitoringController"
":HouseMonitoringUI" --> User: Show result string
deactivate ":HouseMonitoringUI"
@enduml